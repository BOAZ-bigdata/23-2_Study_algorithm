'''
오일러피 


구하는 과정은 알겠는데 아직 익숙하지 않고 원리를 모르겠음

1. 스타트 인덱스를 2부터 시작함 이때 리스트의 인덱스랑 값이랑 같도록 한 리스트에서 시작
2. 시작 인덱스는 2, 2부터 2의 배수들에는 2로 나눈 것을 뺴주는 값을 할당
3. 스타트 인덱스를 3,4, 이렇게 계속 늘려줌
4. 계속 반복하였을때 나눈 값을 할당한 값과 원래의 값이 동일한 부분만 소수




'''




import math
N = int(input())
result = N
for p in range(2, int(math.sqrt(N)) + 1):  # 제곱근까지만 진행
    if N % p == 0:  # p가 소인수인지 확인
        result -= result / p  # 결괏값 업데이트
        while N % p == 0:  # 2의 7승*11이라면 2의 7승을 없애고 11만 남김
            N /= p
if N > 1:  # 반복문에서 제곱근까지만 탐색했으므로 1개의 소인수가 누락되는 케이스 처리
    result -= result / N
print(int(result))